<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:components="com.rga.pearson.view.components.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx">


	<fx:Metadata>
		[Event(name="update_assets", type="com.rga.pearson.event.AssetSliderEvent")]
	</fx:Metadata>


	<fx:Script>
		<![CDATA[
			import com.rga.pearson.event.AssetSliderEvent;
			import com.rga.pearson.model.constants.AssetConstants;
			import com.rga.pearson.model.constants.ColourConstants;
			import com.rga.pearson.model.constants.GridConstants;
			import com.rga.pearson.model.vo.AssetConfigVO;
			import com.rga.pearson.utils.NumberUtils;

			import mx.collections.ArrayCollection;

			private var _assetsVo : AssetConfigVO;


			public function setTotals( assets:AssetConfigVO ):void
			{
				books.maximumAssets = assets.maximum;
				books.currentAssets = assets.getAsset( AssetConstants.BOOKS );

				docs.maximumAssets = assets.maximum;
				docs.currentAssets = assets.getAsset( AssetConstants.DOCUMENTS );

				images.maximumAssets = assets.maximum;
				images.currentAssets = assets.getAsset( AssetConstants.IMAGES );

				interactive.maximumAssets = assets.maximum;
				interactive.currentAssets = assets.getAsset( AssetConstants.INTERACTIVE );

				videos.maximumAssets = assets.maximum;
				videos.currentAssets = assets.getAsset( AssetConstants.VIDEOS );

				activeSegments.value = int( NumberUtils.percent( assets.active, assets.maximum ) * 100 );

				_assetsVo = assets;
			}


			/**
			 * Returns the AssetSliderVo updated with all slider's data
			 */
			public function updateAssetsVo( assetsVo:AssetConfigVO ):AssetConfigVO
			{
				assetsVo.updateAsset( AssetConstants.BOOKS, books.slider.value );
				assetsVo.updateAsset( AssetConstants.DOCUMENTS, docs.slider.value );
				assetsVo.updateAsset( AssetConstants.IMAGES, images.slider.value );
				assetsVo.updateAsset( AssetConstants.INTERACTIVE, interactive.slider.value );
				assetsVo.updateAsset( AssetConstants.VIDEOS, videos.slider.value );
				assetsVo.updatePercentages();
				return assetsVo;
			}


			/**
			 * Sets the main categories
			 */
			public function setCategories( val:ArrayCollection ):void
			{
				categories.dataProvider = val;
				categories.selectedIndex = 0;
			}


			/**
			 * Sets the sub categories
			 */
			protected function assetslider1_updateHandler(event:AssetSliderEvent):void
			{
				event.stopImmediatePropagation();

				dispatchEvent( new AssetSliderEvent( AssetSliderEvent.UPDATE_ASSETS ));
			}


			protected function stepper_changeHandler(event:Event):void
			{
				event.stopImmediatePropagation();

				dispatchEvent( new AssetSliderEvent( AssetSliderEvent.UPDATE_ASSETS ));
			}
		]]>
	</fx:Script>


	<s:Group width="100%"
			 height="100%">
		<s:Rect width="100%"
				height="100%">
			<s:fill>
				<s:SolidColor color="0x000000"/>
			</s:fill>
		</s:Rect>
	</s:Group>



	<s:VGroup width="100%"
			  gap="0"
			  top="6">

		<components:UIPanel title="Configuration"
							width="100%">

			<s:HGroup verticalAlign="middle">
				<s:Label text="Discipline"
						 styleName="iu_label"
						 width="100"/>
				<s:DropDownList id="categories"
								width="345"/>
			</s:HGroup>

			<mx:Spacer height="6"/>

			<s:HGroup verticalAlign="middle">
				<s:Label text="Active segments (%)"
						 styleName="iu_label"
						 width="100"/>
				<s:NumericStepper id="activeSegments"
								  minimum="0"
								  maximum="100"
								  styleName="slider_label"/>
				<s:Label text="Click 'Render Mosaic' button to update"
						 styleName="iu_label"
						 width="272"/>
			</s:HGroup>


		</components:UIPanel>


		<components:UIPanel title="Asset specification"
							width="100%">

			<components:AssetSlider id="books"
									colour="{ColourConstants.GREEN}"
									text="{AssetConstants.BOOKS}"
									update_asset="assetslider1_updateHandler(event)"/>
			<components:AssetSlider id="videos"
									colour="{ColourConstants.PINK}"
									text="{AssetConstants.VIDEOS}"
									update_asset="assetslider1_updateHandler(event)"/>
			<components:AssetSlider id="images"
									colour="{ColourConstants.YELLOW}"
									text="{AssetConstants.IMAGES}"
									update_asset="assetslider1_updateHandler(event)"/>
			<components:AssetSlider id="docs"
									colour="{ColourConstants.BLUE}"
									text="{AssetConstants.DOCUMENTS}"
									update_asset="assetslider1_updateHandler(event)"/>
			<components:AssetSlider id="interactive"
									colour="{ColourConstants.ORANGE}"
									text="{AssetConstants.INTERACTIVE}"
									update_asset="assetslider1_updateHandler(event)"/>

		</components:UIPanel>


		<components:UIPanel width="100%"
							height="100"
							title="Colour distribution">

			<components:layout>
				<s:VerticalLayout horizontalAlign="right"
								  verticalAlign="top"
								  gap="10"
								  paddingRight="0"
								  paddingTop="60"
								  paddingLeft="46"/>
			</components:layout>

			<components:ColourSpectrum id="spectrum"
									   width="100%"/>
		</components:UIPanel>


		<components:UIPanel height="60"
							width="100%">

			<components:layout>
				<s:VerticalLayout horizontalAlign="left"
								  verticalAlign="top"
								  gap="10"
								  paddingTop="20"
								  paddingRight="30"
								  paddingBottom="40"
								  paddingLeft="20"/>
			</components:layout>

			<s:Button id="renderButton"
					  label="Render Mosaic"/>

		</components:UIPanel>


	</s:VGroup>



</s:Group>
