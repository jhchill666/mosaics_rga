<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="400"
		  height="40"
		  verticalAlign="middle">


	<fx:Metadata>
		[Event(name="update_asset", type="com.rga.pearson.event.AssetSliderEvent")]
	</fx:Metadata>


	<fx:Script>
		<![CDATA[
			import com.rga.pearson.event.AssetSliderEvent;
			import com.rga.pearson.model.constants.GridConstants;

			import mx.events.PropertyChangeEvent;
			import mx.events.SliderEvent;

			private var _text:String;

			private var _maximumSegments:int;

			private var _currentAssets:int;


			/**
			 * Sets the total maxmimum number of assets allowed
			 */
			public function set maximumAssets( val:int ):void
			{
				_maximumSegments = ( val / 5 );

				dispatchEvent( new PropertyChangeEvent( PropertyChangeEvent.PROPERTY_CHANGE ));
			}


			/**
			 * @private
			 */
			[Bindable]
			public function get maximumAssets():int
			{
				return _maximumSegments;
			}


			/**
			 * Sets the current number of assets in the grid
			 */
			public function set currentAssets( val:int ):void
			{
				_currentAssets = ( val / 5 );

				dispatchEvent( new PropertyChangeEvent( PropertyChangeEvent.PROPERTY_CHANGE ));
			}


			[Bindable]
			public function get currentAssets():int
			{
				return _currentAssets;
			}


			/**
			 * Sets the text to be display as label for this control
			 */
			public function set text( val:String ):void
			{
				_text = val;
				invalidateProperties();
			}


			/**
			 * @private
			 */
			public function get text():String
			{
				return _text
			}


			override protected function commitProperties():void
			{
				super.commitProperties();

				label.text = _text;
			}


			protected function slider_thumbDragHandler(event:SliderEvent):void
			{
				sliderValue.text = String( int( slider.value ));
			}


			protected function slider_thumbReleaseHandler(event:SliderEvent):void
			{
				dispatchEvent( new AssetSliderEvent( AssetSliderEvent.UPDATE_ASSET ));
			}
		]]>
	</fx:Script>


	<s:Label id="label"
			 styleName="iu_label"
			 width="100"/>

	<s:TextInput id="sliderValue"
				 text="{currentAssets}"
				 styleName="slider_label"
				 width="40"/>

	<mx:HSlider id="slider"
				width="300"
				minimum="0"
				maximum="{maximumAssets}"
				value="{currentAssets}"
				snapInterval="1"
				tickInterval="5"
				liveDragging="true"
				thumbDrag="slider_thumbDragHandler(event)"
				thumbRelease="slider_thumbReleaseHandler(event)"/>



</s:HGroup>
